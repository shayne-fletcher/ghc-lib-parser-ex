# Build, run tests, deploy, and more: https://aka.ms/yaml.

trigger:
  batch: false
  branches:
    include:
    - master

# Enable PR triggers that target the master branch.
pr:
  autoCancel: true # Cancel previous builds on push.
  branches:
    include:
    - master

strategy:
  matrix:
    # Notes:
    #  Tags are encoded in the following way:
    #        <os> '-' <ghc-lib> '-' <compiler>
    #  Not every combination is tested
    #  - We do sampling to keep the number of builds reasonable.

    # +---------+-----------------+------------+
    # | OS      | ghc-lib flavour | GHC        |
    # +=========+=================+============+
    # | linux   | ghc-9.2.1       | ghc-8.10.4 |
    # | windows | ghc-9.2.1       | ghc-8.10.4 |
    # | macOS   | ghc-9.2.1       | ghc-8.10.4 |
    # +---------+-----------------+------------+
    linux-9.2.1-8.10.4:
      image: "ubuntu-latest"
      stack: "stack-921-8104.yaml"
    mac-9.2.1-8.10.4:
      image: "macOS-latest"
      stack: "stack-921-8104.yaml"
    windows-9.2.1-8.10.4:
      image: "windows-latest"
      stack: "stack-921-8104.yaml"

    # +---------+-----------------+------------+
    # | OS      | ghc-lib flavour | GHC        |
    # +=========+=================+============+
    # | linux   | ghc-9.0.1       | ghc-9.0.1  |
    # | windows | ghc-9.0.1       | ghc-9.0.1  |
    # | macOS   | ghc-9.0.1       | ghc-9.0.1  |
    # +---------+-----------------+------------+
    linux-9.0.1-9.0.1:
      image: "ubuntu-latest"
      stack: "stack-exact.yaml"
    #Failure installing GHC.
    #C:\Users\VssAdministrator\AppData\Local\Programs\stack\x86_64-windows\ghc-9.0.1-tmp-9533a853c86e2382\ghc-9.0.1\: renameDirectory:pathIsDirectory:CreateFile "\\\\?\\C:\\Users\\VssAdministrator\\AppData\\Local\\Programs\\stack\\x86_64-windows\\ghc-9.0.1-tmp-9533a853c86e2382\\ghc-9.0.1\\": does not exist (The system cannot find the file specified.)
    #windows-9.0.1-9.0.1:
    #  image: "windows-latest"
    #  stack: "stack-exact.yaml"

    mac-9.0.1-9.0.1:
      image: "macOS-latest"
      stack: "stack-exact.yaml"

    # +---------+-----------------+------------+
    # | OS      | ghc-lib flavour | GHC        |
    # +=========+=================+============+
    # | linux   | ghc-8.10.5      | ghc-8.8.2  |
    # | windows | ghc-8.10.5      | ghc-8.8.2  |
    # | macOS   | ghc-8.10.5      | ghc-8.8.2  |
    # +---------+-----------------+------------+
    linux-8.10.5-8.8.2:
      image: "ubuntu-latest"
      stack: "stack-810-808-ghc-lib.yaml"
    windows-8.10.5-8.8.2:
      image: "windows-latest"
      stack: "stack-810-808-ghc-lib.yaml"
    mac-8.10.5-8.8.2:
      image: "macOS-latest"
      stack: "stack-810-808-ghc-lib.yaml"

    # +---------+-----------------+------------+
    # | OS      | ghc-lib flavour | GHC        |
    # +=========+=================+============+
    # | linux   | ghc-8.8.2       | ghc-8.8.2  |
    # | windows | ghc-8.8.2       | ghc-8.8.2  |
    # | macOS   | ghc-8.8.2       | ghc-8.8.2  |
    # +---------+-----------------+------------+
    # Note : These builds use native ghc libs, not ghc-lib-parser!
    linux-8.8.2-8.8.2-no-ghc-lib:
      image: "ubuntu-latest"
      stack: "stack-808-808-no-ghc-lib.yaml"
    windows-8.8.2-8.8.2-no-ghc-lib:
      image: "windows-latest"
      stack: "stack-808-808-no-ghc-lib.yaml"
    mac-8.8.2-8.8.2-no-ghc-lib:
      image: "macOS-latest"
      stack: "stack-808-808-no-ghc-lib.yaml"

    # +---------+-----------------+------------+
    # | OS      | ghc-lib flavour | GHC        |
    # +=========+=================+============+
    # | linux   | ghc-master      | ghc-8.10.4 |
    # | windows | ghc-master      | ghc-8.10.4 |
    # | macOS   | ghc-master      | ghc-8.10.4 |
    # +---------+-----------------+------------+
    linux-master-8.10.4:
      image: "ubuntu-latest"
      stack: "stack.yaml"
    windows-master-8.10.4:
      image: "windows-latest"
      stack: "stack.yaml"
    mac-master-8.10.4:
      image: "macOS-latest"
      stack: "stack.yaml"

pool: {vmImage: '$(image)'}

steps:
  # macOS
  - bash: |
      /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      brew install automake
    condition: eq( variables['Agent.OS'], 'Darwin' )
    displayName: Install brew
  - script: |
      curl -sSL https://get.haskellstack.org/ | sh -s - -f
      set -e
      stack setup --stack-yaml=$(stack) > /dev/null
      curl -sSL https://raw.github.com/ndmitchell/hlint/master/misc/travis.sh | sh -s . '--cpp-include cbits' '--cpp-define GHCLIB_API_808'
      curl -sSL https://raw.github.com/ndmitchell/hlint/master/misc/travis.sh | sh -s . '--cpp-include cbits' '--cpp-define GHCLIB_API_810'
      curl -sSL https://raw.github.com/ndmitchell/hlint/master/misc/travis.sh | sh -s . '--cpp-include cbits' '--cpp-define GHCLIB_API_900'
      curl -sSL https://raw.github.com/ndmitchell/hlint/master/misc/travis.sh | sh -s . '--cpp-include cbits' '--cpp-define GHCLIB_API_HEAD'
      stack exec --stack-yaml=$(stack) --package extra --package optparse-applicative ghc -- -package extra -package optparse-applicative -Wall -Wno-name-shadowing -Werror -c CI.hs
      stack runhaskell --stack-yaml=$(stack) --package extra --package optparse-applicative CI.hs -- --stack-yaml=$(stack)
